{"ast":null,"code":"var _jsxFileName = \"/home/aneesh/Desktop/Side Projects/clone-apps/instagram-clone/frontend/src/components/registration/registration-form.js\";\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport './registration.css';\nimport '../loginform/Login.css';\nimport axiosInstance from '../commons/axiosApi';\nimport LoadingScreen from '../commons/loading-screen/loading-screen';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class RegistrationForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.checkIfFormValid = () => {\n      let alertMessage = {};\n      let blankExists = false;\n\n      for (let [propName, propValue] of Object.entries(this.state)) {\n        if (['username', 'email', 'password', 'confirmPassword'].includes(propName)) {\n          if (propValue === null || propValue === undefined || propValue === '') {\n            alertMessage['alert' + propName] = this.EMPTYMESSAGE[propName];\n            blankExists = true;\n          } else {\n            alertMessage['alert' + propName] = '';\n          }\n        }\n      }\n\n      console.log(alertMessage);\n      this.setState(alertMessage);\n      console.log('Status of validation is ', blankExists);\n      return !blankExists;\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n\n      if (this.checkIfFormValid()) {\n        this.setState({\n          showLoad: true\n        });\n\n        this._axiosInstance.post('/user/create', {\n          username: this.state.username,\n          password: this.state.password,\n          email: this.state.email\n        }).then(response => {\n          setTimeout(() => this.setState({\n            redirectToLogin: true,\n            showLoad: false\n          }), 4000);\n        });\n      }\n    };\n\n    this.recordValue = (value, typeOfValue) => {\n      this.setState({\n        [typeOfValue]: value\n      });\n    };\n\n    this.EMPTYMESSAGE = {\n      username: 'Please enter a username.',\n      email: 'Please enter an email address.',\n      password: 'Please enter your password.',\n      confirmPassword: 'Please confirm your password.'\n    };\n    this._axiosInstance = axiosInstance;\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      alertusername: '',\n      alertemail: '',\n      alertpassword: '',\n      alertconfirmPassword: '',\n      showLoad: false,\n      redirectToLogin: false\n    };\n  }\n\n  componentDidMount() {}\n\n  componentWillUnmount() {\n    this.setState({\n      redirectToLogin: false\n    });\n  }\n\n  render() {\n    if (this.state.redirectToLogin) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: '/',\n          state: {\n            displaySuccessAlert: true\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(LoadingScreen, {\n        display: this.state.showLoad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container m-350\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"app-name\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          class: \"line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"data\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              placeholder: \"Enter username...\",\n              className: \"login-input thin-border\",\n              onChange: se => this.recordValue(se.target.value, 'username')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              placeholder: \"Enter email...\",\n              type: \"email\",\n              className: \"login-input thin-border\",\n              onChange: se => this.recordValue(se.target.value, 'email')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              placeholder: \"Enter password...\",\n              type: \"password\",\n              className: \"login-input thin-border\",\n              onChange: se => this.recordValue(se.target.value, 'password')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              placeholder: \"Confirm password...\",\n              type: \"password\",\n              className: \"login-input thin-border\",\n              onChange: se => this.recordValue(se.target.value, 'confirmPassword')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"button\",\n            variant: \"primary\",\n            type: \"submit\",\n            onClick: this.handleSubmit,\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), this.state.alertusername && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"warning\",\n            style: {\n              'margin-top': '10px'\n            },\n            children: this.state.alertusername\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 29\n          }, this), this.state.alertemail && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"warning\",\n            style: {\n              'margin-top': '10px'\n            },\n            children: this.state.alertemail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this), this.state.alertpassword && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"warning\",\n            style: {\n              'margin-top': '10px'\n            },\n            children: this.state.alertpassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 29\n          }, this), this.state.alertconfirmPassword && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"warning\",\n            style: {\n              'margin-top': '10px'\n            },\n            children: this.state.alertconfirmPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/aneesh/Desktop/Side Projects/clone-apps/instagram-clone/frontend/src/components/registration/registration-form.js"],"names":["React","Form","Button","Alert","axiosInstance","LoadingScreen","Redirect","RegistrationForm","Component","constructor","props","checkIfFormValid","alertMessage","blankExists","propName","propValue","Object","entries","state","includes","undefined","EMPTYMESSAGE","console","log","setState","handleSubmit","event","preventDefault","showLoad","_axiosInstance","post","username","password","email","then","response","setTimeout","redirectToLogin","recordValue","value","typeOfValue","confirmPassword","alertusername","alertemail","alertpassword","alertconfirmPassword","componentDidMount","componentWillUnmount","render","pathname","displaySuccessAlert","se","target"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport './registration.css';\nimport '../loginform/Login.css';\nimport axiosInstance from '../commons/axiosApi';\nimport LoadingScreen from '../commons/loading-screen/loading-screen';\nimport { Redirect } from 'react-router-dom';\nexport default class RegistrationForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.EMPTYMESSAGE = {\n            username: 'Please enter a username.',\n            email: 'Please enter an email address.',\n            password: 'Please enter your password.',\n            confirmPassword: 'Please confirm your password.',\n        };\n        this._axiosInstance = axiosInstance;\n        this.state = {\n            username: '',\n            email: '',\n            password: '',\n            confirmPassword: '',\n            alertusername: '',\n            alertemail: '',\n            alertpassword: '',\n            alertconfirmPassword: '',\n            showLoad: false,\n            redirectToLogin: false,\n        };\n    }\n    componentDidMount() {}\n    checkIfFormValid = () => {\n        let alertMessage = {};\n        let blankExists = false;\n        for (let [propName, propValue] of Object.entries(this.state)) {\n            if (['username', 'email', 'password', 'confirmPassword'].includes(propName)) {\n                if (propValue === null || propValue === undefined || propValue === '') {\n                    alertMessage['alert' + propName] = this.EMPTYMESSAGE[propName];\n                    blankExists = true;\n                } else {\n                    alertMessage['alert' + propName] = '';\n                }\n            }\n        }\n        console.log(alertMessage);\n        this.setState(alertMessage);\n        console.log('Status of validation is ', blankExists);\n        return !blankExists;\n    };\n    handleSubmit = (event) => {\n        event.preventDefault();\n        if (this.checkIfFormValid()) {\n            this.setState({\n                showLoad: true,\n            });\n            this._axiosInstance\n                .post('/user/create', {\n                    username: this.state.username,\n                    password: this.state.password,\n                    email: this.state.email,\n                })\n                .then((response) => {\n                    setTimeout(\n                        () =>\n                            this.setState({\n                                redirectToLogin: true,\n                                showLoad: false,\n                            }),\n                        4000,\n                    );\n                });\n        }\n    };\n    recordValue = (value, typeOfValue) => {\n        this.setState({\n            [typeOfValue]: value,\n        });\n    };\n    componentWillUnmount() {\n        this.setState({\n            redirectToLogin: false,\n        });\n    }\n    render() {\n        if (this.state.redirectToLogin) {\n            return (\n                <Redirect\n                    to={{\n                        pathname: '/',\n                        state: {\n                            displaySuccessAlert: true,\n                        },\n                    }}\n                />\n            );\n        }\n        return (\n            <React.Fragment>\n                <LoadingScreen display={this.state.showLoad} />\n\n                <div className=\"form-container m-350\">\n                    <h1 className=\"app-name\">Register</h1>\n                    <hr class=\"line\" />\n                    <Form>\n                        <Form.Group controlId=\"data\">\n                            <Form.Control\n                                placeholder=\"Enter username...\"\n                                className=\"login-input thin-border\"\n                                onChange={(se) => this.recordValue(se.target.value, 'username')}\n                            />\n                            <Form.Control\n                                placeholder=\"Enter email...\"\n                                type=\"email\"\n                                className=\"login-input thin-border\"\n                                onChange={(se) => this.recordValue(se.target.value, 'email')}\n                            />\n                            <Form.Control\n                                placeholder=\"Enter password...\"\n                                type=\"password\"\n                                className=\"login-input thin-border\"\n                                onChange={(se) => this.recordValue(se.target.value, 'password')}\n                            />\n                            <Form.Control\n                                placeholder=\"Confirm password...\"\n                                type=\"password\"\n                                className=\"login-input thin-border\"\n                                onChange={(se) =>\n                                    this.recordValue(se.target.value, 'confirmPassword')\n                                }\n                            />\n                        </Form.Group>\n                        <Button\n                            className=\"button\"\n                            variant=\"primary\"\n                            type=\"submit\"\n                            onClick={this.handleSubmit}\n                        >\n                            Register\n                        </Button>\n                        {this.state.alertusername && (\n                            <Alert\n                                variant=\"warning\"\n                                style={{\n                                    'margin-top': '10px',\n                                }}\n                            >\n                                {this.state.alertusername}\n                            </Alert>\n                        )}\n                        {this.state.alertemail && (\n                            <Alert\n                                variant=\"warning\"\n                                style={{\n                                    'margin-top': '10px',\n                                }}\n                            >\n                                {this.state.alertemail}\n                            </Alert>\n                        )}\n                        {this.state.alertpassword && (\n                            <Alert\n                                variant=\"warning\"\n                                style={{\n                                    'margin-top': '10px',\n                                }}\n                            >\n                                {this.state.alertpassword}\n                            </Alert>\n                        )}\n                        {this.state.alertconfirmPassword && (\n                            <Alert\n                                variant=\"warning\"\n                                style={{\n                                    'margin-top': '10px',\n                                }}\n                            >\n                                {this.state.alertconfirmPassword}\n                            </Alert>\n                        )}\n                    </Form>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}