{"ast":null,"code":"var _jsxFileName = \"/home/aneesh/Desktop/Side Projects/clone-apps/instagram-clone/frontend/src/components/commons/loading-screen/loading-screen.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Spinner, Modal } from 'react-bootstrap';\nimport { CSSTransition } from 'react-transition-group';\nimport './loading-screen.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst findByType = (children, component) => {\n  const result = [];\n  const type = [component.displayName] || [component.name];\n  React.Children.forEach(children, child => {\n    const childType = child && child.type && (child.type.displayName || child.type.name);\n\n    if (type.includes(childType)) {\n      result.push(child);\n    }\n  });\n  console.log(result);\n  return result[0];\n};\n\nconst Footer = () => null;\n\n_c = Footer;\n\nconst Body = () => null;\n\n_c2 = Body;\nexport default class LoadingScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.operateChildren = children => {\n      React.Children.forEach(children, child => {\n        console.log(child, child.name, child.displayName, child.type);\n      });\n    };\n\n    this.el = document.getElementById('root');\n    this.state = {};\n  }\n\n  componentWillUnmount() {}\n\n  renderFooter() {\n    const {\n      children\n    } = this.props;\n    const footer = findByType(children, Footer);\n\n    if (!footer) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: footer.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this);\n  }\n\n  renderBody() {\n    const {\n      children\n    } = this.props;\n    const body = findByType(children, Body);\n    console.log(body);\n\n    if (!body) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: body.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this);\n  }\n\n  render() {\n    // this.el.classList += ' overlay';\n    return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(CSSTransition, {\n      in: this.props.display,\n      unmountOnExit: true,\n      timeout: {\n        enter: 0,\n        exit: 300\n      },\n      children: [this.renderBody(), this.renderFooter()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), document.getElementById('root'));\n  }\n\n}\nLoadingScreen.Body = Body;\nLoadingScreen.Footer = Footer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Footer\");\n$RefreshReg$(_c2, \"Body\");","map":{"version":3,"sources":["/home/aneesh/Desktop/Side Projects/clone-apps/instagram-clone/frontend/src/components/commons/loading-screen/loading-screen.js"],"names":["React","ReactDOM","Spinner","Modal","CSSTransition","findByType","children","component","result","type","displayName","name","Children","forEach","child","childType","includes","push","console","log","Footer","Body","LoadingScreen","Component","constructor","props","operateChildren","el","document","getElementById","state","componentWillUnmount","renderFooter","footer","renderBody","body","render","createPortal","display","enter","exit"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Spinner, Modal } from 'react-bootstrap';\nimport { CSSTransition } from 'react-transition-group';\nimport './loading-screen.css';\nconst findByType = (children, component) => {\n    const result = [];\n    const type = [component.displayName] || [component.name];\n    React.Children.forEach(children, (child) => {\n        const childType =\n            child && child.type && (child.type.displayName || child.type.name);\n        if (type.includes(childType)) {\n            result.push(child);\n        }\n    });\n    console.log(result);\n    return result[0];\n};\nconst Footer = () => null;\nconst Body = () => null;\nexport default class LoadingScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.el = document.getElementById('root');\n        this.state = {};\n    }\n    componentWillUnmount() {}\n    operateChildren = (children) => {\n        React.Children.forEach(children, (child) => {\n            console.log(child, child.name, child.displayName, child.type);\n        });\n    };\n    renderFooter() {\n        const { children } = this.props;\n        const footer = findByType(children, Footer);\n        if (!footer) {\n            return null;\n        }\n        return <div>{footer.props.children}</div>;\n    }\n    renderBody() {\n        const { children } = this.props;\n        const body = findByType(children, Body);\n        console.log(body);\n        if (!body) {\n            return null;\n        }\n        return <div>{body.props.children}</div>;\n    }\n    render() {\n        // this.el.classList += ' overlay';\n        return ReactDOM.createPortal(\n            <CSSTransition\n                in={this.props.display}\n                unmountOnExit\n                timeout={{ enter: 0, exit: 300 }}\n            >\n                {/* <div className=\"overlay\">\n                    <div\n                        className={`loading-screen-container ${\n                            this.props.display ? 'modal-show' : ''\n                        }`}\n                    >\n                        <div className=\"vertical-flex-container m-10\">\n                            {this.props.children}\n                        </div>\n                    </div>\n                </div> */}\n                {/* {this.props.children} */}\n                {this.renderBody()}\n                {this.renderFooter()}\n            </CSSTransition>,\n            document.getElementById('root')\n        );\n    }\n}\nLoadingScreen.Body = Body;\nLoadingScreen.Footer = Footer;\n"]},"metadata":{},"sourceType":"module"}